# Nom du workflow tel qu’il apparaît sous l’onglet « Actions » du dépôt GitHub.
name: FLOW
on:
# Ajoutez l’événement pull_request pour que le workflow s’exécute automatiquement chaque fois qu’une demande de tirage est créée ou mise à jour.
  pull_request:
    branches:
      - develop
  # Ajoutez l’événement push pour que le workflow s’exécute automatiquement chaque fois qu’un commit est poussé vers une branche appelée pre-dev.
  push:
    branches:
      - pre-dev
#  Regroupe tous les travaux qui s’exécutent dans le fichier de workflow.
jobs:

  flutter_test: 
    name: Run flutter test and analyse
# Configure le travail pour qu’il s’exécute sur un exécuteur ubuntu-latest ou macos-latest hébergé par GitHub
    runs-on: ubuntu-latest
    steps:
# utilise l'action "checkout" pour récupérer le code source du projet à partir du référentiel GitHub.
      - uses: actions/checkout@v3
      - uses: actions/setup-java@v2
        with:
          distribution: 'zulu'
          java-version: '11'
# utilise l'action "subosito/flutter-action" pour installer la version stable de Flutter
      - uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.x'
          channel: 'stable'
          architecture: x64
     # Get flutter dependencies.
      - run: flutter clean
      - run: flutter pub get
      - run: flutter analyze
      - run: flutter test
      - run: flutter build apk
# - run: flutter build appbundle
    
      # Check for any formatting issues in the code.
      # - run: flutter format lib/** --set-exit-if-changed.